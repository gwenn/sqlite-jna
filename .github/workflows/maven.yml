name: CI

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Install libsqlite3-dev
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get -q install libsqlite3-dev
    - name: Install libsqlite3 dll
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        SQLITE=sqlite-amalgamation-3490100
        curl -L -O https://sqlite.org/2025/$SQLITE.zip
        unzip -p "$SQLITE.zip" "$SQLITE/sqlite3.c" > "sqlite3.c"
        unzip -p "$SQLITE.zip" "$SQLITE/sqlite3.h" > "sqlite3.h"
        rm -f "$SQLITE.zip"
        gcc.exe -Os -fpic -DWIN64 -m64 -I. -shared -o sqlite3.dll -DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_THREADSAFE=1 -DSQLITE_DEFAULT_FOREIGN_KEYS=1 sqlite3.c

    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: 8

    - uses: actions/checkout@v3

    - name: Build with Maven
      if: matrix.os == 'ubuntu-latest'
      run: mvn -q -B test

    - name: Build with Maven
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: mvn -Djna.library.path=. -q -B test
